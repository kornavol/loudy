{"version":3,"sources":["reportWebVitals.ts","api/index.ts","components/MusicPlayer/Content/Content.tsx","utils/index.ts","components/MusicPlayer/Playbar/Playbar.tsx","state/index.ts","components/MusicPlayer/MusicPayer.tsx","App/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","api","axios","create","baseURL","loadSongs","a","get","response","console","error","likeSong","payload","config","headers","params","URLSearchParams","append","post","Content","list","useContext","StoreContext","state","dispatch","useState","playVisibleId","setPlayVisibleId","id","map","song","index","name","music_file_path","artist_name","cover_image_path","style","width","paddingLeft","marginRight","playing","isCurrentSong","visible","src","alt","className","onClick","type","path","toString","Favorite","isFavorite","setIsFavorite","prev","PlayPause","visibility","formatTime","inputSeconds","seconds","Math","floor","minutes","Playbar","currentTime","duration","transform","marginTop","min","max","value","volume","step","marginLeft","onChange","e","target","initialState","reducer","action","time","parseFloat","createContext","MusicPayer","useReducer","setList","useEffect","result","status","data","fetchSongs","audioRef","useRef","current","load","play","pause","Provider","ref","onLoadedMetadata","onTimeUpdate","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27ac3f17.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\nconst baseURL = 'https://api-stg.jam-community.com'\r\nconst apiKey = \"___agAFTxkmMIWsmN9zOpM_6l2SkZPPy21LGRlxhYD8\"\r\n\r\nconst api = axios.create({\r\n    baseURL\r\n});\r\n\r\nexport const loadSongs = async () => {\r\n    try {\r\n        const response = await api.get('/song/trending')\r\n        return response;\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nexport const likeSong = async (payload) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n    }\r\n\r\n    const params = new URLSearchParams()\r\n    params.append('id', payload)\r\n\r\n    try {\r\n        const response = await api.post(`/interact/like?apikey=${apiKey}`, params, config)\r\n        return response;\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}","import React, { FC, useEffect, useState, useContext } from 'react'\r\nimport { StoreContext } from '../MusicPayer'\r\n\r\nimport './style.scss'\r\nimport { likeSong } from '../../../api'\r\n\r\ninterface Iprops {\r\n  list: any[]\r\n}\r\n\r\nconst Content: FC<Iprops> = ({ list }) => {\r\n  const { state, dispatch } = useContext(StoreContext)\r\n  const [playVisibleId, setPlayVisibleId] = useState('')\r\n\r\n  return (\r\n    <div id=\"content\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td />\r\n            <td />\r\n            <td>Title</td>\r\n            <td>Artist</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {list &&\r\n            list.map((song: any, index: number) => {\r\n              const {\r\n                id,\r\n                name,\r\n                music_file_path,\r\n                artist_name,\r\n                cover_image_path\r\n              } = song\r\n\r\n              return (\r\n                <tr key={id}>\r\n                  <td style={{ width: 75, paddingLeft: 5 }}>\r\n                    <Favorite id={id} />\r\n\r\n                    <span style={{ marginRight: 20 }} />\r\n\r\n                    <PlayPause\r\n                      playing={state.playing}\r\n                      isCurrentSong={state.id === id}\r\n                      visible={playVisibleId === id}\r\n                    />\r\n\r\n                    <span style={{ marginRight: 20 }} />\r\n                  </td>\r\n                  <td>\r\n                    <img src={cover_image_path} alt=\"\" />\r\n                  </td>\r\n                  <td\r\n                    className=\"song-name\"\r\n                    onClick={() => {\r\n                      dispatch({\r\n                        type: 'PLAY',\r\n                        path: music_file_path,\r\n                        id,\r\n                        index: index.toString()\r\n                      })\r\n                      setPlayVisibleId(id)\r\n                    }}\r\n                  >\r\n                    {name}\r\n                  </td>\r\n                  <td>{artist_name}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content\r\n\r\nconst Favorite = ({ id }) => {\r\n  const [isFavorite, setIsFavorite] = useState(false)\r\n\r\n  return isFavorite ? (\r\n    <i className=\"fa fa-heart\" onClick={() => setIsFavorite((prev) => !prev)} />\r\n  ) : (\r\n    <i\r\n      onClick={() => {\r\n        likeSong(id)\r\n        setIsFavorite((prev) => !prev)\r\n      }}\r\n      className=\"fa fa-heart-o\"\r\n    />\r\n  )\r\n}\r\n\r\nconst PlayPause = ({ playing, isCurrentSong, visible }) => {\r\n  const { dispatch } = useContext(StoreContext)\r\n  const style: React.CSSProperties = {\r\n    visibility: visible ? 'visible' : 'hidden'\r\n  }\r\n\r\n  if (isCurrentSong && playing) {\r\n    return (\r\n      <i\r\n        className=\"fa fa-pause\"\r\n        onClick={() => dispatch({ type: 'PAUSE' })}\r\n        style={style}\r\n      />\r\n    )\r\n  } else {\r\n    return (\r\n      <i\r\n        className=\"fa fa-play\"\r\n        onClick={() => dispatch({ type: 'PLAY' })}\r\n        style={style}\r\n      />\r\n    )\r\n  }\r\n}\r\n","export const formatTime = inputSeconds => {\r\n    let seconds: number | string = Math.floor(inputSeconds % 60)\r\n    if (seconds < 10) seconds = `0${seconds}`\r\n\r\n    const minutes = Math.floor(inputSeconds / 60)\r\n\r\n    return `${minutes}:${seconds}`\r\n}\r\n\r\nexport const handleProgress = (currentTime, duration) => 600 * (currentTime / duration)","import React, { FC, useContext } from 'react'\r\nimport './style.scss'\r\nimport { StoreContext } from '../MusicPayer'\r\n\r\nimport { formatTime, handleProgress } from '../../../utils'\r\n\r\ninterface Iprops {\r\n  list: any[]\r\n}\r\n\r\nconst Playbar: FC<Iprops> = ({ list }) => {\r\n  const { state, dispatch } = useContext(StoreContext)\r\n  const { index, id } = state\r\n\r\n  if (!id) {\r\n    return <div className=\"playbar\" />\r\n  }\r\n\r\n  const song = list[index]\r\n  const playOrPause = () =>\r\n    state.playing ? dispatch({ type: 'PAUSE' }) : dispatch({ type: 'PLAY' })\r\n\r\n  return (\r\n    <div id=\"playbar\">\r\n      <div className=\"left\">\r\n        {id && (\r\n          <>\r\n            <div>{song.name}</div>\r\n\r\n            <div className=\"artist\">{song.artist_name}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"middle\">\r\n        <div className=\"play-pause-circle\" onClick={playOrPause}>\r\n          <i\r\n            className={`fa fa-${state.playing ? 'pause' : 'play'}`}\r\n            style={{ transform: state.playing ? '' : 'translateX(1.5px)' }}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ marginTop: 2.5 }}>\r\n          <span>{formatTime(Math.floor(state.currentTime))}</span>\r\n\r\n          <div className=\"progress-container\">\r\n            <div\r\n              className=\"bar\"\r\n              style={{\r\n                width: handleProgress(state.currentTime, state.duration)\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <span>{formatTime(state.duration)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"right\">\r\n        <i className=\"fa fa-volume-up\" />\r\n\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          value={state.volume}\r\n          step=\"0.01\"\r\n          style={{ marginLeft: 10 }}\r\n          onChange={(e) =>\r\n            dispatch({ type: 'SET_VOLUME', volume: e.target.value })\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Playbar\r\n","interface IInitialState {\r\n    music_file_path: string\r\n    playing: boolean\r\n    id: string\r\n    index: string\r\n    currentTime: number\r\n    duration: number\r\n    volume: number\r\n}\r\n\r\nconst DEFAULT_VOLUME = 0.65\r\n\r\nexport const initialState: IInitialState = {\r\n    id: \"\",\r\n    music_file_path: \"\",\r\n    playing: false,\r\n    index: \"\",\r\n    currentTime: 0,\r\n    duration: 0,\r\n    volume: DEFAULT_VOLUME\r\n}\r\n\r\nexport const reducer = (state: IInitialState = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'PLAY':\r\n            return {\r\n                ...state,\r\n                playing: true,\r\n                music_file_path: action.path || state.music_file_path,\r\n                id: action.id || state.id,\r\n                index: action.index || state.index\r\n            }\r\n        case 'PAUSE':\r\n            return { ...state, playing: false }\r\n        case 'SET_CURRENT_TIME':\r\n            return { ...state, currentTime: action.time }\r\n        case 'SET_DURATION':\r\n            return { ...state, duration: action.duration }\r\n        case 'SET_VOLUME':\r\n            return { ...state, volume: parseFloat(action.volume) }\r\n    }\r\n    return state\r\n}","import './style.scss'\r\n\r\nimport React, {\r\n  FC,\r\n  createContext,\r\n  useReducer,\r\n  useRef,\r\n  useEffect,\r\n  useState\r\n} from 'react'\r\n\r\nimport Content from './Content/Content'\r\nimport Playbar from './Playbar/Playbar'\r\n\r\nimport { loadSongs } from '../../api'\r\n\r\nimport { initialState, reducer } from '../../state'\r\n\r\nexport const StoreContext = createContext(null)\r\n\r\nconst MusicPayer: FC = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const [list, setList] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      const result = await loadSongs()\r\n      if (result && result.status === 200) {\r\n        setList(result.data)\r\n      }\r\n    }\r\n    fetchSongs()\r\n  }, [])\r\n\r\n  const audioRef = useRef<HTMLAudioElement>()\r\n\r\n  useEffect(() => {\r\n    if (state.playing) {\r\n      audioRef.current.load()\r\n      audioRef.current.play()\r\n    } else audioRef.current.pause()\r\n  }, [state.playing, state.music_file_path])\r\n\r\n  useEffect(() => {\r\n    audioRef.current.volume = state.volume\r\n  }, [state.volume])\r\n\r\n  const song = state.music_file_path\r\n\r\n  return (\r\n    <StoreContext.Provider value={{ state, dispatch }}>\r\n      <div id=\"musicPlayer\">\r\n        <Content list={list} />\r\n        <Playbar list={list} />\r\n      </div>\r\n\r\n      <audio\r\n        ref={audioRef}\r\n        src={song && song}\r\n        onLoadedMetadata={() =>\r\n          dispatch({\r\n            type: 'SET_DURATION',\r\n            duration: audioRef.current.duration\r\n          })\r\n        }\r\n        onTimeUpdate={(e: any) =>\r\n          dispatch({ type: 'SET_CURRENT_TIME', time: e.target.currentTime })\r\n        }\r\n      />\r\n    </StoreContext.Provider>\r\n  )\r\n}\r\n\r\nexport default MusicPayer\r\n","import React, { FC } from 'react'\r\n\r\nimport './style.scss'\r\nimport MusicPayer from '../components/MusicPlayer/MusicPayer'\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <div id=\"app\">\r\n      <MusicPayer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}